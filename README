################################# MASTER BRANCH ###############################
Tutorial1: Contains a very basic example of how a JNI callback to a Java Static
	   method works
Tutorial2: Contains an example to explore some possibilities of JNI callbacks
	   ran within a native thread, properly attached to the current JVM.
	   The callbacks go from native code to Android Activity, and interact
	   with the UI
Tutorial3: Contains an example where the native code calls back to an Android
	   Service. In this example the Service called "Tutorial3Service" just
	   loads the native shared library and permits a custom service which
	   extends it to override callback methods. Furthermore, messenger and
	   broadcast intents have been used to let the activity communicate
	   with the CustomService.
###############################################################################

The full package consists of 3 tutorials to explore JNI calls into Android
environment, through the ndk development kit.

How to make it work:

0- Clone the tutorials into your <ndk-root> folder

1- Create a new project in Eclipse from the existing sample source
In Eclipse:
Click File > New Android Project...
Select the Create project from existing source radio button.
Select any API level above Android 1.5
In the Location field, click Browse... and select the proper tutorialX dir.
Click Finish.

2- On the command line:
Change to the <ndk-root>/tutorials/tutorialX directory.
Run the following command to generate a build.xml file:
android update project -p .
Compile the native code using the ndk-build command.
cd <ndk-root>/tutorials/tutorialX
<ndk_root>/ndk-build

4- In Eclipse: after you launched the emulator, run project as Android App
